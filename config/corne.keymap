/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
                &kp TAB  &kp Q  &kp W         &kp E  &kp R      &kp T                  &kp Y  &kp U              &kp I       &kp O      &kp P               &kp BSPC
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S         &kp D  &kp F      &kp G                  &kp H  &kp J              &kp K       &kp L   &kp SEMI  &mt RIGHT_CONTROL SQT
              &kp EQUAL  &kp Z  &kp X         &kp C  &kp V      &kp B                  &kp N  &kp M          &kp COMMA  &kp PERIOD  &kp SLASH         &kp UNDERSCORE
                                       &kp LEFT_ALT  &mo 2  &kp SPACE    &mt RIGHT_SHIFT RET  &mo 1  &kp RIGHT_COMMAND
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &trans  &kp EXCLAMATION       &kp AT_SIGN  &kp RS(NUMBER_3)            &kp DOLLAR    &kp PERCENT       &kp CARET          &kp AMPERSAND     &kp ASTERISK          &kp TILDE     &kp MINUS  &kp BSPC
   &trans     &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3          &kp NUMBER_4   &kp NUMBER_5    &kp NUMBER_6           &kp NUMBER_7     &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0     &none
&kp EQUAL        &kp GRAVE  &kp LEFT_BRACKET    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp BACKSLASH        &kp PIPE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET      &kp HASH     &none
                                                        &trans                &trans      &kp SPACE         &kp RET                  &none           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &none         &kp LS(LA(LC(LG(Q))))         &kp LS(LA(LC(LG(W))))         &kp LS(LA(LC(LG(E))))         &kp LS(LA(LC(LG(R))))         &kp LS(LA(LC(LG(T))))           &kp LS(LA(LC(LG(Y))))         &kp LS(LA(LC(LG(U))))         &kp LS(LA(LC(LG(I))))         &kp LS(LA(LC(LG(O))))         &kp LS(LA(LC(LG(P))))  &none
&kp CAPS  &kp LS(LA(LC(LG(NUMBER_1))))  &kp LS(LA(LC(LG(NUMBER_2))))  &kp LS(LA(LC(LG(NUMBER_3))))  &kp LS(LA(LC(LG(NUMBER_4))))  &kp LS(LA(LC(LG(NUMBER_5))))    &kp LS(LA(LC(LG(NUMBER_6))))  &kp LS(LA(LC(LG(NUMBER_7))))  &kp LS(LA(LC(LG(NUMBER_8))))  &kp LS(LA(LC(LG(NUMBER_9))))  &kp LS(LA(LC(LG(NUMBER_0))))  &none
   &none          &kp C_BRIGHTNESS_DEC          &kp C_BRIGHTNESS_INC             &kp C_VOLUME_DOWN               &kp C_VOLUME_UP                    &kp C_PREV                      &kp C_NEXT              &kp C_PLAY_PAUSE                         &none                         &none                         &none  &none
                                                                                            &trans                        &trans                     &kp SPACE                         &kp RET                        &trans                        &trans
            >;
        };

        layer_3 {
            bindings = <
&none             &none         &none      &bt BT_SEL 0    &bt BT_SEL 1  &none       &none     &none   &none      &none  &none  &none
&none             &none         &none             &none           &none  &none    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none       &none     &none   &none      &none  &none  &none
                                                  &none           &none  &none       &none     &none   &none
            >;
        };
    };
};
