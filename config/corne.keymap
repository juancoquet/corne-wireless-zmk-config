/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    macros {
        superglide: superglide {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp A>;
            label = "SUPERGLIDE";
            wait-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y                &kp U  &kp I              &kp O       &kp P          &kp SLASH
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H                &kp J  &kp K              &kp L       &kp SEMI       &mt RIGHT_CONTROL SQT
&kp EQUAL                &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N                &kp M  &kp COMMA          &kp PERIOD  &kp BACKSPACE  &kp UNDERSCORE
                                       &kp LEFT_ALT  &mo 2  &kp SPACE    &mt RIGHT_SHIFT RET  &mo 1  &kp RIGHT_COMMAND
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCLAMATION  &kp AT_SIGN       &kp RS(NUMBER_3)  &kp DOLLAR            &kp PERCENT      &kp CARET     &kp AMPERSAND          &kp ASTERISK     &kp TILDE          &kp MINUS      &kp LA(NUMBER_3)
&trans     &kp NUMBER_1     &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4          &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7           &kp NUMBER_8     &kp NUMBER_9       &kp NUMBER_0   &trans
&kp EQUAL  &kp GRAVE        &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp BACKSLASH    &kp PIPE      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp BACKSPACE  &none
                                              &trans            &trans                &kp SPACE        &kp LS(RET)   &none                  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none     &kp LS(LC(Q))         &kp LS(LC(W))         &kp LS(LC(E))      &kp LS(LC(R))    &kp LS(LC(T))    &kp LS(LC(Y))  &kp LS(LC(U))     &kp LS(LC(I))  &kp LS(LC(O))  &kp LS(LC(P))      &none
&kp CAPS  &kp LS(LC(A))         &kp LS(LC(S))         &kp LS(LC(D))      &kp LS(LC(F))    &kp LS(LC(G))    &kp LS(LC(H))  &kp LS(LC(J))     &kp LS(LC(K))  &kp LS(LC(L))  &kp LS(LC(COLON))  &none
&none     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV       &kp C_NEXT     &kp C_PLAY_PAUSE  &none          &none          &none              &none
                                                      &trans             &trans           &kp SPACE        &kp ENTER      &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F12  &kp F1            &kp F2        &kp F3            &kp F4          &kp F5    &kp F6    &kp F7        &kp F8        &kp F9        &kp F10  &kp F11
&none    &none             &none         &none             &none           &none     &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT     &none    &bt BT_CLR
&none    &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none     &none     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none    &to 4
                                         &none             &none           &none     &none     &none         &none
            >;
        };

        layer_4 {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11   &kp F12
&kp LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H   &kp J   &kp K   &kp L    &kp SEMI  &kp APOS
&superglide       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp F1  &kp F2  &kp F3  &kp F4   &kp F5    &kp F6
                                &kp LEFT_ALT  &mo 5  &kp SPACE    &none   &none   &none
            >;
        };

        layer_5 {
            bindings = <
&kp ESC         &kp P         &kp O         &kp I         &kp U         &kp Y           &none  &none  &none  &none  &none  &none
&kp RET         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5          &none  &none  &none  &none  &none  &none
&kp LEFT_SHIFT  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &none  &none  &none  &none  &none  &none
                                            &none         &trans        &none           &none  &none  &none
            >;
        };
    };
};
